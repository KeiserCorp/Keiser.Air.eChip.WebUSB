export default class OWDevice {
    private mutex;
    private searching;
    private usbDevice;
    private interrupt;
    private bulkIn;
    private bulkOut;
    private onDetectKeys;
    constructor(usbDevice: USBDevice, onDetectKeys?: (keyId: Array<Uint8Array>) => void);
    claim(): Promise<boolean>;
    startSearch(): Promise<void>;
    close(): Promise<void>;
    private awaitKey;
    private keySearch;
    private deviceStatus;
    private detectShort;
    private setSpeed;
    private reset;
    private deviceReset;
    private write;
    private writeBit;
    private read;
    private readBit;
    private clearByte;
    private romCommand;
    private romMatch;
    private romSearch;
    private romSubSearch;
    private keyWrite;
    keyWriteAll(keyRom: Uint8Array, data?: Array<Uint8Array>, overdrive?: boolean): Promise<void>;
    keyWriteDiff(keyRom: Uint8Array, newData?: Array<Uint8Array>, oldData?: Array<Uint8Array>, overdrive?: boolean): Promise<void>;
    keyReadAll(keyRom: Uint8Array, overdrive?: boolean): Promise<Uint8Array[]>;
}
