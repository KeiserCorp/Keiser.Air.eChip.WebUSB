!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.EChip=t():e.EChip=t()}(window,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var i=function(e,t,n,i){return new(n||(n=Promise))(function(r,o){function c(e){try{s(i.next(e))}catch(e){o(e)}}function a(e){try{s(i.throw(e))}catch(e){o(e)}}function s(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(c,a)}s((i=i.apply(e,t||[])).next())})};class r{constructor(e){this.coreDevice=e}isSameDevice(e){return e.serialNumber===this.coreDevice.serialNumber}disconnect(){return i(this,void 0,void 0,function*(){})}initialize(){return i(this,void 0,void 0,function*(){try{yield this.coreDevice.open()}catch(e){throw new Error("USB Device cannot be opened.\n[Check driver installation.]")}})}mapEndpoints(){return i(this,void 0,void 0,function*(){throw this.coreDevice.configurations.forEach(e=>{e.interfaces.forEach(e=>{e.alternates.forEach(e=>{e.endpoints.forEach(e=>{})})})}),new Error("Device interfaces unavailable")})}}n.d(t,"default",function(){return s});var o=function(e,t,n,i){return new(n||(n=Promise))(function(r,o){function c(e){try{s(i.next(e))}catch(e){o(e)}}function a(e){try{s(i.throw(e))}catch(e){o(e)}}function s(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(c,a)}s((i=i.apply(e,t||[])).next())})};const c=1274,a=9360;class s{constructor(){this.targetDevice=null,navigator.usb.addEventListener("connect",e=>{this.attached(e)}),navigator.usb.addEventListener("disconnect",e=>{this.detached(e)}),this.checkDevices()}checkDevices(){return o(this,void 0,void 0,function*(){(yield navigator.usb.getDevices()).forEach(e=>{this.matchesTarget(e)&&(console.log("EChip Reader already connected."),this.connect(e))})})}requestPermission(){return o(this,void 0,void 0,function*(){if(!this.targetDevice)try{let e=yield navigator.usb.requestDevice({filters:[{vendorId:c,productId:a}]});this.connect(e)}catch(e){throw new Error("EChip Reader permission denied.")}})}close(){this.targetDevice&&(this.targetDevice.disconnect(),this.targetDevice=null)}attached(e){e instanceof USBConnectionEvent&&this.matchesTarget(e.device)&&(console.log("EChip Reader connected."),this.connect(e.device))}detached(e){e instanceof USBConnectionEvent&&this.matchesTarget(e.device)&&this.targetDevice&&this.targetDevice.isSameDevice(e.device)&&(console.log("EChip Reader disconnected."),this.close())}connect(e){this.targetDevice=new r(e)}matchesTarget(e){return e.vendorId===c&&e.productId===a}}}])});